# code: language=Ansible insertSpaces=true tabSize=2


- name: Inherit variables
  set_fact:
    ceph_client_k8s_csi_cid: "{{ ceph_client_k8s_cid | default('') }}"
  when:
    - inventory_hostname == k8s_primary_master_name
  tags: [always]


- name: Assertions
  assert:
    that:
      - ceph_client_k8s_csi_namespace | default('') | length > 0
      - ceph_client_k8s_csi_cid | default('') | length > 0 or not 'apply' in ansible_run_tags
  when:
    - inventory_hostname == k8s_primary_master_name
  tags: [always]


- name: Get resources info
  k8s_info:
    kind: "{{ item.kind }}"
    name: "{{ item.name }}"
    namespace: "{{ item.namespace }}"
  register: "_csirbd_info"
  with_items:
    - { kind: "ConfigMap",    name: "{{ ceph_client_k8s_csi_cfgmap_name }}", namespace: "{{ ceph_client_k8s_csi_namespace }}"    }
    - { kind: "Secret",       name: "{{ ceph_client_k8s_secret_name }}",     namespace: "{{ ceph_client_k8s_secret_namespace }}" }
    - { kind: "StorageClass", name: "{{ ceph_client_k8s_sc_name }}",         namespace: "{{ ceph_client_k8s_sc_namespace }}",    }
  when:
    - inventory_hostname == k8s_primary_master_name
  tags: [always]


- name: Set resources info
  set_fact:
    _csirbd_config: "{{ _csirbd_info['results'][0]['resources'][0]['data']['config.json'] | default('[]') | from_json }}"
  when:
    - inventory_hostname == k8s_primary_master_name
  tags: [always]


- name: Set resources status
  set_fact:
    _csirbd_cluster_exists: "{{ _csirbd_config | json_query(query_cluster) | default([]) | length > 0 }}"
    _csirbd_secret_exists:  "{{ _csirbd_info['results'][1]['resources'] | length > 0 }}"
    _csirbd_sc_exists:      "{{ _csirbd_info['results'][2]['resources'] | length > 0 }}"
  vars:
    query_cluster: "[?clusterID=='{{ ceph_client_k8s_csi_cid }}']"
  when:
    - inventory_hostname == k8s_primary_master_name
  tags: [always]


# --- Apply / Update ConfigMap ---

- name: User notification
  debug:
    msg: "The ConfigMap {{ ceph_client_k8s_csi_cfgmap_name }} in namespace {{ ceph_client_k8s_csi_namespace }} already defines the clusterID {{ ceph_client_k8s_csi_cid }}. Include tag 'force_cfg' to force-update the cluster."
  when:
    - inventory_hostname == k8s_primary_master_name
    - _csirbd_cluster_exists and 'force_cfg' not in ansible_run_tags
  tags: [never, apply]


- name: Add cluster config 
  set_fact:
    _csirbd_config: "{{ _csirbd_config | union(lookup('template', 'ceph-csi-rbd/cluster.json.j2')) }}"
  when:
    - inventory_hostname == k8s_primary_master_name
    - not _csirbd_cluster_exists or 'force' in ansible_run_tags or 'force_cfg' in ansible_run_tags
  tags: [never, apply]


- name: Apply cluster ConfigMap
  k8s:
    definition: "{{ lookup('template', 'ceph-csi-rbd/configmap.yml.j2') }}"
    state: present
  when:
    - inventory_hostname == k8s_primary_master_name
    - not _csirbd_cluster_exists or 'force' in ansible_run_tags or 'force_cfg' in ansible_run_tags
  tags: [never, apply]


# --- Apply Secret ---

- name: User notification
  debug:
    msg: "The Secret {{ ceph_client_k8s_secret_name }} in namespace {{ ceph_client_k8s_secret_namespace }} is already defined. Include tag 'force_secret' to force-update the secret."
  when:
    - inventory_hostname == k8s_primary_master_name
    - _csirbd_secret_exists and 'force_secret' not in ansible_run_tags
  tags: [never, apply]


- name: Apply cluster Secret
  k8s:
    definition: "{{ lookup('template', 'ceph-csi-rbd/secret.yml.j2') }}"
    state: present
  when:
    - inventory_hostname == k8s_primary_master_name
    - not _csirbd_secret_exists or 'force' in ansible_run_tags or 'force_secret' in ansible_run_tags
  tags: [never, apply]


# --- Apply StorageClass ---

- name: User notification
  debug:
    msg: "The StorageClass {{ ceph_client_k8s_sc_name }} in namespace {{ ceph_client_k8s_sc_namespace }} is already defined. Include tag 'force_sc' to force-update the StorageClass."
  when:
    - inventory_hostname == k8s_primary_master_name
    - _csirbd_sc_exists and 'force_sc' not in ansible_run_tags
  tags: [never, apply]


- name: Apply StorageClass
  k8s:
    definition: "{{ lookup('template', 'ceph-csi-rbd/storageclass.yml.j2') }}"
    state: present
  when:
    - inventory_hostname == k8s_primary_master_name
    - not _csirbd_sc_exists or 'force' in ansible_run_tags or 'force_sc' in ansible_run_tags
  tags: [never, apply]


# --- Delete StorageClass ---

- name: Delete StorageClass
  k8s:
    kind: StorageClass
    name: "{{ ceph_client_k8s_sc_name }}"
    state: absent
  when:
    - inventory_hostname == k8s_primary_master_name
  tags: [never, delete]


# --- Delete Secret ---

- name: Delete cluster Secret
  k8s:
    kind: Secret
    name: "{{ ceph_client_k8s_secret_name }}"
    namespace: "{{ ceph_client_k8s_secret_namespace }}"
    state: absent
  when:
    - inventory_hostname == k8s_primary_master_name
  tags: [never, delete]


# --- Delete / Update ConfigMap ---

- name: Remove cluster config
  set_fact:
    _csirbd_config: "{{ _csirbd_config | json_query(query) | default([]) }}"
  vars:
    query: "[?clusterID!='{{ ceph_client_k8s_csi_cid }}']"
  when:
    - inventory_hostname == k8s_primary_master_name
    - _csirbd_cluster_exists
  tags: [never, delete]


- name: Apply cluster ConfigMap
  k8s:
    definition: "{{ lookup('template', 'ceph-csi-rbd/configmap.yml.j2') }}"
    state: present
  when:
    - inventory_hostname == k8s_primary_master_name
    - _csirbd_cluster_exists
  tags: [never, delete]
